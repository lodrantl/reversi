image: Visual Studio 2015

environment:
  matrix:
    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x" # currently 3.4.3
      PYTHON_ARCH: "32"
    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x" # currently 3.5.3
      PYTHON_ARCH: "_amd64"

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Set path and kivy options
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - "SET KIVY_GL_BACKEND=angle_sdl2"
  - "SET USE_SDL2=1"
  - "SET USE_GSTREAMER=1"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # Install the build dependencies of the project.
  - "%CMD_IN_ENV% pip install cython==0.23"
  - "%CMD_IN_ENV% pip install docutils pygments pypiwin32 kivy.deps.glew kivy.deps.glew_dev kivy.deps.sdl2 kivy.deps.sdl2_dev kivy.deps.gstreamer_dev kivy.deps.angle"
  - "%CMD_IN_ENV% pip install pyinstaller pytest"

  # Install development kivy wheel
  - "curl -fsS -o Kivy-1.9.2.dev0-cp35-cp35m-win%PYTHON_ARCH%.whl https://kivy.org/downloads/appveyor/kivy/Kivy-1.9.2.dev0-cp35-cp35m-win%PYTHON_ARCH%.whl"
  - "pip install Kivy-1.9.2.dev0-cp35-cp35m-win%PYTHON_ARCH%.whl"

  # Enable remote desktop (OpenGL fix)
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-desktop.ps1'))

test_script:
  # Run the project tests
  - "%CMD_IN_ENV% python -m pytest"

after_test:
  # Build our binary
  - "%CMD_IN_ENV% python -m PyInstaller reversi.spec"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#
